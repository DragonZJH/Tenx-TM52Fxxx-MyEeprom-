C51 COMPILER V9.56.0.0   MYEEPROM                                                          07/10/2021 20:04:07 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MYEEPROM
OBJECT MODULE PLACED IN MyEeprom.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE MyEeprom.c OPTIMIZE(9,SIZE) BROWSE INCDIR(.\Drivers) DEBUG OBJECTEXTEND 
                    -TABS(2)

line level    source

   1          
   2          
   3          /******************************************************************************
   4          
   5            Copyright (C), 2015-2020, xxx Co., Ltd.
   6          
   7           ******************************************************************************
   8            File Name     : MyEeprom.c
   9            Version       : Initial Draft
  10            Author        : Dragon8814
  11            Created       : 2021/7/6
  12            Last Modified :
  13            Description   : 用户接口文件
  14                            根据用户程序的需要自定义修改，
  15                            比如需要测试保存数据等情况，
  16                            注意：保存的数据接口函数@MyEepromSaveAllDataUserHandle()
  17                                  保存的数据必须是所有数据，因为它会把所有数据保存
  18                                  在一个最新区域内
  19            Function List :
  20                        MyEepromSaveAllDataUserHandle
  21                        MyEepromInit
  22                        MyEepromTestHandle
  23            History       :
  24            1.Date        : 2021/7/6
  25              Author      : Dragon8814
  26              Modification: Created file
  27          
  28          ******************************************************************************/
  29          
  30          
  31          
  32          
  33          #include "MyEeprom.h"
  34          #include "TM52f82XX_Eeprom.h"
  35          #include "LED.h"
  36          
  37          
  38          
  39          void MyEepromSaveAllDataUserHandle ( unsigned char writeOnWhichArea );
  40          
  41          
  42          
  43          volatile struct eepromUser xdata  MyEeprom;
  44          
  45          
  46          
  47          /*****************************************************************************
  48           Prototype    : MyEepromInit
  49           Description  : 用户Eeprom初始化调用
  50           Input        : None
  51           Output       : None
  52           Return Value :
  53           Calls        :
  54           Called By    :
C51 COMPILER V9.56.0.0   MYEEPROM                                                          07/10/2021 20:04:07 PAGE 2   

  55          
  56            History        :
  57            1.Date         : 2021/7/6
  58              Author       : Dragon8814
  59              Modification : Created function
  60          
  61          *****************************************************************************/
  62          
  63          void MyEepromInit()
  64          {
  65   1      
  66   1        MyEeprom.SaveAllDataOnUserHandle= ( eepromSaveData* ) MyEepromSaveAllDataUserHandle;
  67   1        EepromSetup ( &MyEeprom );
  68   1      }
  69          
  70          
  71          /*****************************************************************************
  72           Prototype    : MyEepromWrite
  73           Description  : 用户Eeprom写数据操作调用
  74                          注意写入自动分配到新的区域或  在当前区域，取决于
  75                              当前的区域的写入情况
  76           Input        : unsigned int  addr 写入数据的地址@AllEepromAddr
  77                          unsigned char dat  写入数据
  78                          unsigned char isSaveAll  是否更新所有数据
  79           Output       : None
  80           Return Value :
  81           Calls        :
  82           Called By    :
  83          
  84            History        :
  85            1.Date         : 2021/7/6
  86              Author       : Dragon8814
  87              Modification : Created function
  88          
  89          *****************************************************************************/
  90          void MyEepromWrite ( unsigned int  addr,unsigned char dat,unsigned char isSaveAll )
  91          {
  92   1      
  93   1        EepromWrite (  addr, dat,  isSaveAll );
  94   1      }
  95          
  96          
  97          
  98          
  99          
 100          #if TestEeprom==TRUE
 101          /*****************************************************************************
 102           Prototype    : MyEepromTestHandle
 103           Description  : 供测试调用，用户可以自定义修改，
 104           Input        : char* from 用户自定义指针 如数码管显示缓冲区，串口打印数据数组等
 105                          unsigned int  dat
 106                          unsigned char flag  用户自定义操作命令
 107           Output       : None
 108           Return Value :
 109           Calls        :
 110           Called By    :
 111          
 112            History        :
 113            1.Date         : 2021/7/6
 114              Author       : Dragon8814
 115              Modification : Created function
 116          
C51 COMPILER V9.56.0.0   MYEEPROM                                                          07/10/2021 20:04:07 PAGE 3   

 117          *****************************************************************************/
 118          void MyEepromTestHandle ( char* from,unsigned char flag )
 119          {
 120   1        unsigned char idata t;
 121   1        unsigned char idata area=0;
 122   1        switch ( flag )
 123   1        {
 124   2      
 125   2          case 'A':
 126   2      #if TestEeprom==TRUE
 127   2            //读取每个区域写入次数的
 128   2            for ( t=0; t<EepromMaxArea; t++ )
 129   2            { 
 130   3                //已知区域直接根据地址读取相应的数据
 131   3              RWEepromStart();
 132   3              MyEeprom.EepromTestArea[t]= * ( MyEeprom.EepromOnRamAddress+ ( EepromStrogeValue*2*t ) );
 133   3              RWEepromEnd();
 134   3            }
 135   2            for ( t=0; t<EepromMaxArea; t++ )
 136   2            {
 137   3              if ( MyEeprom.EepromTestArea[t]<EepromMaxAreaCount )
 138   3              {
 139   4                area=t;
 140   4                break;
 141   4              }
 142   3      
 143   3            }
 144   2            //已知区域直接根据地址读取相应的数据
 145   2            RWEepromStart();
 146   2            MyEeprom.EepromTestWriteCount = ( unsigned long ) ( * ( MyEeprom.EepromOnRamAddress+ ( EepromStrogeValu
             -e*2* area )+CS_CountAddr_L *2  ) ) ;
 147   2            MyEeprom.EepromTestWriteCount|= ( ( ( unsigned long )  ( * ( MyEeprom.EepromOnRamAddress+ ( EepromStrog
             -eValue*2* area )+ CS_CountAddr_H *2      ) ) ) <<8 );
 148   2            MyEeprom.EepromTestWriteCount|= ( ( ( unsigned long )  ( * ( MyEeprom.EepromOnRamAddress+ ( EepromStrog
             -eValue*2* area )+ SetStableDukAddr_L *2  ) ) ) <<16 );
 149   2            MyEeprom.EepromTestWriteCount|= ( ( ( unsigned long )  ( * ( MyEeprom.EepromOnRamAddress+ ( EepromStrog
             -eValue*2* area )+ SetStableDukAddr_H *2  ) ) ) <<24 );
 150   2            RWEepromEnd();
 151   2      #endif
 152   2      
 153   2            break;
 154   2          case 'B':
 155   2            //外部给定的变量地址 数据大小即为写入的速度
 156   2            //用测试EEprom擦写极限或擦写寿命
 157   2            if ( * ( ( unsigned int* ) from ) >=40 ) //=500为5秒写一次 ，10=100ms 40=400ms
 158   2            {
 159   3              * ( ( unsigned int* ) from ) =0;
 160   3              //更新所有数据
 161   3              MyEepromWrite ( FALSE,FALSE,TRUE );
 162   3      
 163   3            }
 164   2      
 165   2            break;
 166   2          case 'C':
 167   2      #if TestEeprom==TRUE
 168   2            //LED显示缓冲区写入特定数据
 169   2            //显示当前写入的区域 并显示每个区域当前写入的次数
 170   2            from[LED_SetTemp_COM1]=Number[MyEeprom.EepromTestArea[0]/100]; //0
 171   2            from[LED_SetTemp_COM2]=Number[MyEeprom.EepromTestArea[0]%100/10]&SEG_DPOFF;
 172   2            from[LED_SetTemp_COM3]=Number[MyEeprom.EepromTestArea[0]%10];
 173   2      
 174   2            from[LED_RealTemp_COM1]=ALL_SEG_OFF;
C51 COMPILER V9.56.0.0   MYEEPROM                                                          07/10/2021 20:04:07 PAGE 4   

 175   2            from[LED_RealTemp_COM2]=Number[MyEeprom.EepromTestArea[1]/100]&SEG_DPOFF; //1
 176   2            from[LED_RealTemp_COM3]=Number[MyEeprom.EepromTestArea[1]%100/10];
 177   2            from[LED_RealTemp_COM4]=Number[MyEeprom.EepromTestArea[1]%10];
 178   2      
 179   2      
 180   2            from[LED_SetHumidity_COM1]=ALL_SEG_OFF;
 181   2            from[LED_SetHumidity_COM2]=Number[MyEeprom.EepromTestArea[2]/100];
 182   2            from[LED_RealHumidity_COM1]=Number[MyEeprom.EepromTestArea[2]%100/10];
 183   2            from[LED_RealHumidity_COM2]=Number[MyEeprom.EepromTestArea[2]%10];
 184   2      
 185   2            from[LED_FDTimeLeft_COM1]=Number[MyEeprom.EepromTestArea[3]/100]; //3
 186   2            from[LED_FDTimeLeft_COM2]=Number[MyEeprom.EepromTestArea[3]%100/10];
 187   2            from[LED_FDTimeLeft_COM3]=Number[MyEeprom.EepromTestArea[3]%10];
 188   2      #endif
 189   2            break;
 190   2          case 'D':
 191   2      #if TestEeprom==TRUE
 192   2            //显示总共写入了多少次
 193   2            from[LED_RealTemp_COM1]=Number[MyEeprom.EepromTestWriteCount/1000000];
 194   2            from[LED_RealTemp_COM2]=Number[MyEeprom.EepromTestWriteCount%1000000/100000]&SEG_DPOFF; //1
 195   2            from[LED_RealTemp_COM3]=Number[MyEeprom.EepromTestWriteCount%100000/10000];
 196   2            from[LED_RealTemp_COM4]=Number[MyEeprom.EepromTestWriteCount%10000/1000];
 197   2      
 198   2      
 199   2            from[LED_RealHumidity_COM1]=Number[MyEeprom.EepromTestWriteCount%1000/100];
 200   2            from[LED_RealHumidity_COM2]=Number[MyEeprom.EepromTestWriteCount%100/10];
 201   2      
 202   2            from[LED_FDTimeLeft_COM1]=Number[MyEeprom.EepromTestWriteCount%10];
 203   2            from[LED_FDTimeLeft_COM2]=ALL_SEG_OFF;
 204   2            from[LED_FDTimeLeft_COM3]=ALL_SEG_OFF;
 205   2      #endif
 206   2            break;
 207   2      
 208   2          default:
 209   2            break;
 210   2        }
 211   1      }
 212          
 213          #endif
 214          
 215          
 216          
 217          
 218          /*****************************************************************************
 219           Prototype    : MyEepromSaveAllDataUserHandle
 220           Description  : 用户接口,程序自动选择的当前区域中保存用户的所有的数据
 221                          注意:
 222                              1 此接口必须写入所有需要保存的数据
 223                              2 此接口处单个字节写调用EepromWriteByte()函数
 224           Input        : unsigned char writeOnWhichArea 当前保存数据的区域
 225           Output       : None
 226           Return Value :
 227           Calls        :
 228           Called By    :
 229          
 230            History        :
 231            1.Date         : 2021/7/6
 232              Author       : Dragon8814
 233              Modification : Created function
 234          
 235          ****************************************************************************/
 236          
C51 COMPILER V9.56.0.0   MYEEPROM                                                          07/10/2021 20:04:07 PAGE 5   

 237          void MyEepromSaveAllDataUserHandle ( unsigned char writeOnWhichArea )
 238          {
 239   1      
 240   1        /***************************用户自定义段没有需要不添加*************************/
 241   1            unsigned int xdata setTemp;
 242   1            unsigned char xdata setHumidity, fd_Time;
 243   1        //只有在DIY模式下需要备份 
 244   1        //其他模式需要备份再写入,避免下次运行DIY模式时参数出错
 245   1        if ( SetData.FH_Mode != 9 )
 246   1        {
 247   2          setTemp = SetData.SetTemp; //备份当前运行
 248   2          setHumidity = SetData.SetHumidity;
 249   2          fd_Time = SetData.FD_Time;
 250   2          SetData.SetHumidity = SetData.SetHumidityBuf; //保存原始数据，
 251   2          SetData.SetTemp = SetData.SetTempBuf;
 252   2          SetData.FD_Time = SetData.FD_TimeBuf;
 253   2      
 254   2          RunData.WorkTimeBuf = RunData.WorkTime_Second;
 255   2        }
 256   1        else
 257   1        {
 258   2          //是DIY 需要更新本次数据，避免下次切换其他模式时还是保存旧的数据
 259   2          SetData.FD_TimeBuf = SetData.FD_Time;
 260   2          SetData.SetTempBuf = SetData.SetTemp;
 261   2          SetData.SetHumidityBuf = SetData.SetHumidity;
 262   2      
 263   2          RunData.WorkTimeBuf = RunData.WorkTime_Second;
 264   2        }
 265   1        /*********************************END********************************************/
 266   1      
 267   1      
 268   1      
 269   1      
 270   1      
 271   1      
 272   1        CLR_WDT;
 273   1          /*****************************用户必须添加段，必须加入所有需要保存的数据*************************/
 274   1        EepromWriteByte ( EepromStrogeValue*2* writeOnWhichArea +FH_ModeAddr*2, SetData.FH_Mode );
 275   1        //写入设置温度
 276   1        EepromWriteByte ( EepromStrogeValue*2* writeOnWhichArea +SetTempAddr_L*2,SetData.SetTemp );
 277   1        EepromWriteByte ( EepromStrogeValue* 2* writeOnWhichArea +SetTempAddr_H*2, SetData.SetTemp >> 8 );
 278   1      
 279   1        EepromWriteByte ( EepromStrogeValue* 2* writeOnWhichArea + SetHumidityAddr*2, SetData.SetHumidity );
 280   1        EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +FD_TimeAddr*2, SetData.FD_Time );
 281   1      
 282   1        CLR_WDT;
 283   1        EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +SystemStartFlagAddr*2, ( unsigned char ) Syste
             -mStart_Flag );
 284   1        EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +WorkTimeAddr_L*2, RunData.WorkTime_Second & 0x
             -00ff );
 285   1        EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +WorkTimeAddr_H*2, RunData.WorkTime_Second >> 8
             - );
 286   1        EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +FD_CountAdd_L*2, RunData.FD_Count & 0x00ff );
 287   1        EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +FD_CountAdd_H*2, RunData.FD_Count >> 8 );
 288   1      #if TestEeprom==TRUE //测试用
 289   1        {
 290   2          //测试时这几个地址更改为保存总写入次数 ,也可以自定义其他地址
 291   2          //MyEeprom.EepromTestWriteCount=162000;
 292   2          EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_L*2,  MyEeprom.EepromTestWriteCo
             -unt & 0x000000ff );
 293   2          EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_H*2, ( MyEeprom.EepromTestWriteC
             -ount>>8 ) & 0x000000ff );
C51 COMPILER V9.56.0.0   MYEEPROM                                                          07/10/2021 20:04:07 PAGE 6   

 294   2          CLR_WDT;
 295   2          EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_L*2, ( MyEeprom.EepromTestWr
             -iteCount>>16 ) & 0x000000ff );
 296   2          EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_H*2, ( MyEeprom.EepromTestWr
             -iteCount>>24 ) );
 297   2        }
 298   1      #else
              
                EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_L*2, RunData.CS_Count & 0x00ff );
                EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_H*2, RunData.CS_Count >> 8 );
                CLR_WDT;
                EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_L*2, RunData.DukBuf_H & 0x00f
             -f );
                EepromWriteByte (  EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_H*2, RunData.DukBuf_H >> 8 );
              #endif
 306   1         /*********************************END********************************************/
 307   1      
 308   1      
 309   1      
 310   1      
 311   1      
 312   1      
 313   1      
 314   1         /***************************用户自定义段没有需要不添加*************************/
 315   1        //用户自定义数据恢复
 316   1        if ( SetData.FH_Mode != 9 )
 317   1        {
 318   2          SetData.SetHumidity = setHumidity; //恢复
 319   2          SetData.SetTemp = setTemp;
 320   2          SetData.FD_Time = fd_Time;
 321   2        }
 322   1        /***************************用户自定义段没有需要不添加*************************/
 323   1      
 324   1      }
 325          
 326          
 327          
 328          
 329          /*****************************************************************************
 330           Prototype    : MyEepromRead
 331           Description  : 根据地址读取单个数据 用户调用
 332           Input        : unsigned char addr  
 333           Output       : None
 334           Return Value : unsigned
 335           Calls        : 
 336           Called By    : 
 337           
 338            History        :
 339            1.Date         : 2021/7/6
 340              Author       : Dragon8814
 341              Modification : Created function
 342          
 343          *****************************************************************************/
 344          unsigned char MyEepromRead(unsigned char addr)
 345          {
 346   1      
 347   1         return EepromRead ( addr );
 348   1      }
 349          
 350          
 351          
 352          
C51 COMPILER V9.56.0.0   MYEEPROM                                                          07/10/2021 20:04:07 PAGE 7   

 353          
 354          
 355          /*****************************************************************************
 356           Prototype    : ReadSameDataFromEeprom
 357           Description  : 用户自定义，在Eeprom读取一些数据
 358           Input        : None
 359           Output       : None
 360           Return Value :
 361           Calls        :
 362           Called By    :
 363          
 364            History        :
 365            1.Date         : 2021/7/6
 366              Author       : Dragon8814
 367              Modification : Created function
 368          
 369          *****************************************************************************/
 370          
 371          void ReadSameDataFromEeprom()
 372          {
 373   1          #if TestEeprom==TRUE
 374   1             if(MyEeprom.EepromTestWriteCount==0) //上电读取擦除次数
 375   1             MyEepromTestHandle ( FALSE,'A' );
 376   1          #endif
 377   1      
 378   1        SetData.FH_Mode=MyEepromRead ( FH_ModeAddr );
 379   1      
 380   1        SetData.FD_Time=MyEepromRead (  FD_TimeAddr );
 381   1      
 382   1        SetData.SetTemp=MyEepromRead (  SetTempAddr_L );
 383   1        SetData.SetTemp+= ( ( unsigned int ) MyEepromRead ( SetTempAddr_H ) <<8 );
 384   1        SetData.SetHumidity= MyEepromRead ( SetHumidityAddr );
 385   1        SetData.SetHumidityBuf=SetData.SetHumidity;
 386   1        SystemStart_Flag= ( bit ) MyEepromRead ( SystemStartFlagAddr );
 387   1        RunData.WorkTime_Second=MyEepromRead ( WorkTimeAddr_L )+ ( ( unsigned int ) MyEepromRead ( WorkTimeAddr_H
             - ) <<8 ) ;
 388   1        RunData.WorkTimeBuf=RunData.WorkTime_Second;
 389   1        RunData.FD_Count=MyEepromRead (  FD_CountAdd_L );
 390   1        RunData.FD_Count+= ( ( unsigned int ) MyEepromRead ( FD_CountAdd_H ) <<8 );
 391   1        RunData.CS_Count=MyEepromRead ( CS_CountAddr_L )+ ( ( unsigned int ) MyEepromRead ( CS_CountAddr_H ) <<8 
             -) ;
 392   1      
 393   1      
 394   1      }
 395          
 396          
 397          
 398          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1372    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     13       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----       2
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
