C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MYEEPROM
OBJECT MODULE PLACED IN MyEeprom.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE MyEeprom.c OPTIMIZE(9,SIZE) BROWSE INCDIR(.\Drivers) DEBUG OBJECTEXTEND 
                    -TABS(2)

line level    source

   1          
   2          
   3          /******************************************************************************
   4          
   5            Copyright (C), 2015-2020, xxx Co., Ltd.
   6          
   7           ******************************************************************************
   8            File Name     : MyEeprom.c
   9            Version       : Initial Draft
  10            Author        : Dragon8814
  11            Created       : 2021/7/6
  12            Last Modified :
  13            Description   : 用户接口文件
  14                            根据用户程序的需要自定义修改，
  15                            比如需要测试保存数据等情况，
  16                            注意：保存的数据接口函数@MyEepromSaveAllDataUserHandle()
  17                                  保存的数据必须是所有数据，因为它会把所有数据保存
  18                                  在一个最新区域内
  19            Function List :
  20                        MyEepromSaveAllDataUserHandle
  21                        MyEepromInit
  22                        MyEepromTestHandle
  23            History       :
  24            1.Date        : 2021/7/6
  25              Author      : Dragon8814
  26              Modification: Created file
  27          
  28          ******************************************************************************/
  29          
  30          
  31          
  32          
  33          #include "MyEeprom.h"
  34          #include "LED.h"
  35          
  36          
  37          
  38          void MyEepromSaveAllDataUserHandle ( unsigned char writeOnWhichArea );
  39          
  40          volatile struct eepromUser xdata  MyEeprom;
  41          
  42          static xdata enum  userSet  setD,setE,setF,setG,setH;
  43          volatile unsigned char xdata EepromAddress[ChipEepromRamCP] _at_ EepromStartAddr;
  44          
  45          
  46          
  47          
  48          /*****************************************************************************
  49           Prototype    : MyEepromInit
  50           Description  : 用户Eeprom初始化调用
  51           Input        : None
  52           Output       : None
  53           Return Value :
  54           Calls        :
C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 2   

  55           Called By    :
  56          
  57            History        :
  58            1.Date         : 2021/7/6
  59              Author       : Dragon8814
  60              Modification : Created function
  61          
  62          *****************************************************************************/
  63          
  64          void MyEepromInit()
  65          {
  66   1         //为了防止程序跑飞提高稳定性，可以在工作期间多次初始化
  67   1          MyEeprom.EepromOnRamAddress=EepromAddress;
  68   1        MyEeprom.SaveAllDataOnUserHandle= ( eepromSaveData* ) MyEepromSaveAllDataUserHandle;
  69   1      
  70   1        setD=EepromMaxAreaCount_;
  71   1        MyEeprom.EepromMaxAreaCount=setD;
  72   1        setE=EepromStrogeValue_;
  73   1        MyEeprom.EepromStrogeValue=setE;
  74   1        setF=EepromMaxArea_;
  75   1        MyEeprom.EepromMaxArea=setF;
  76   1        setG=EepromLastArea_;
  77   1        MyEeprom.EepromLastArea=setG;
  78   1        setH=OutOfTheArea_;
  79   1        MyEeprom.OutOfTheArea=setH;
  80   1        
  81   1        EepromSetup ( &MyEeprom );
  82   1      }
  83          
  84          
  85          /*****************************************************************************
  86           Prototype    : MyEepromWrite
  87           Description  : 用户Eeprom写数据操作调用
  88                          注意写入自动分配到新的区域或  在当前区域，取决于
  89                              当前的区域的写入情况
  90           Input        : unsigned int  addr 写入数据的地址@AllEepromAddr
  91                          unsigned char dat  写入数据
  92                          unsigned char isSaveAll  是否更新所有数据
  93           Output       : None
  94           Return Value :
  95           Calls        :
  96           Called By    :
  97          
  98            History        :
  99            1.Date         : 2021/7/6
 100              Author       : Dragon8814
 101              Modification : Created function
 102          
 103          *****************************************************************************/
 104          void MyEepromWrite ( unsigned int  addr,unsigned char dat,unsigned char isSaveAll )
 105          {
 106   1          MyEepromInit();
 107   1        EepromWrite (  addr, dat,  isSaveAll );
 108   1      }
 109          
 110          
 111          
 112          #if TestEeprom==TRUE
 113          /*****************************************************************************
 114           Prototype    : MyEepromTestHandle
 115           Description  : 供测试调用，用户可以自定义修改，
 116           Input        : char* from 用户自定义指针 如数码管显示缓冲区，串口打印数据数组等
C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 3   

 117                          unsigned int  dat
 118                          unsigned char flag  用户自定义操作命令
 119           Output       : None
 120           Return Value :
 121           Calls        :
 122           Called By    :
 123          
 124            History        :
 125            1.Date         : 2021/7/6
 126              Author       : Dragon8814
 127              Modification : Created function
 128          
 129          *****************************************************************************/
 130          void MyEepromTestHandle ( char* from,unsigned char flag )
 131          {
 132   1        unsigned char idata t;
 133   1        unsigned char idata area=0;
 134   1        switch ( flag )
 135   1        {
 136   2      
 137   2          case 'A'://测试读取每个区域写入次数的,
 138   2      #if TestEeprom==TRUE
 139   2                  area=0xff;
 140   2            
 141   2            for ( t=0; t<MyEeprom.EepromMaxArea; t++ )
 142   2            {
 143   3                //直接根据所在区域和地址读取相应的数据
 144   3              MyEeprom.EepromTestArea[t]=EepromReadWithArea ( AreaAddr,t );
 145   3              if(area==0xff){
 146   4                         if ( MyEeprom.EepromTestArea[t]<MyEeprom.EepromMaxAreaCount )
 147   4                {
 148   5                area=t;
 149   5                }
 150   4              }
 151   3            }
 152   2                   area==0xff?area=0:nop;
 153   2                   
 154   2            //已知区域直接根据所在区域和地址读取相应的数据
 155   2            MyEeprom.EepromTestWriteCount = ( unsigned long ) EepromReadWithArea ( CS_CountAddr_L,area );
 156   2            MyEeprom.EepromTestWriteCount|= ( ( unsigned long ) EepromReadWithArea ( CS_CountAddr_H,area ) <<8 );
 157   2            MyEeprom.EepromTestWriteCount|= ( ( unsigned long ) EepromReadWithArea ( SetStableDukAddr_L,area ) <<16
             - );
 158   2            MyEeprom.EepromTestWriteCount|= ( ( unsigned long ) EepromReadWithArea ( SetStableDukAddr_H,area ) <<24
             - );
 159   2      #endif
 160   2            break;
 161   2          case 'B':
 162   2            //from:外部给定的变量地址 数据大小即为写入的速度
 163   2            //用测试EEprom擦写极限或擦写寿命
 164   2            if ( * ( ( unsigned int* ) from ) >=40 ) //=500为5秒写一次 ，10=100ms 40=400ms
 165   2            {
 166   3              * ( ( unsigned int* ) from ) =0;
 167   3              //更新所有数据
 168   3              MyEepromWrite ( NULL,NULL,TRUE );
 169   3      
 170   3            }
 171   2      
 172   2            break;
 173   2          case 'C':
 174   2      #if TestEeprom==TRUE
 175   2            //LED显示缓冲区写入特定数据
 176   2            //显示当前写入的区域 并显示每个区域当前写入的次数
C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 4   

 177   2            from[LED_SetTemp_COM1]=Number[MyEeprom.EepromTestArea[0]/100]; //0
 178   2            from[LED_SetTemp_COM2]=Number[MyEeprom.EepromTestArea[0]%100/10]&SEG_DPOFF;
 179   2            from[LED_SetTemp_COM3]=Number[MyEeprom.EepromTestArea[0]%10];
 180   2      
 181   2            from[LED_RealTemp_COM1]=ALL_SEG_OFF;
 182   2            from[LED_RealTemp_COM2]=Number[MyEeprom.EepromTestArea[1]/100]&SEG_DPOFF; //1
 183   2            from[LED_RealTemp_COM3]=Number[MyEeprom.EepromTestArea[1]%100/10];
 184   2            from[LED_RealTemp_COM4]=Number[MyEeprom.EepromTestArea[1]%10];
 185   2      
 186   2      
 187   2            from[LED_SetHumidity_COM1]=ALL_SEG_OFF;
 188   2            from[LED_SetHumidity_COM2]=Number[MyEeprom.EepromTestArea[2]/100];
 189   2            from[LED_RealHumidity_COM1]=Number[MyEeprom.EepromTestArea[2]%100/10];
 190   2            from[LED_RealHumidity_COM2]=Number[MyEeprom.EepromTestArea[2]%10];
 191   2      
 192   2            from[LED_FDTimeLeft_COM1]=Number[MyEeprom.EepromTestArea[3]/100]; //3
 193   2            from[LED_FDTimeLeft_COM2]=Number[MyEeprom.EepromTestArea[3]%100/10];
 194   2            from[LED_FDTimeLeft_COM3]=Number[MyEeprom.EepromTestArea[3]%10];
 195   2      #endif
 196   2            break;
 197   2          case 'D':
 198   2      #if TestEeprom==TRUE
 199   2            //显示总共写入了多少次
 200   2            from[LED_RealTemp_COM1]=Number[MyEeprom.EepromTestWriteCount/1000000];
 201   2            from[LED_RealTemp_COM2]=Number[MyEeprom.EepromTestWriteCount%1000000/100000]&SEG_DPOFF; //1
 202   2            from[LED_RealTemp_COM3]=Number[MyEeprom.EepromTestWriteCount%100000/10000];
 203   2            from[LED_RealTemp_COM4]=Number[MyEeprom.EepromTestWriteCount%10000/1000];
 204   2      
 205   2      
 206   2            from[LED_RealHumidity_COM1]=Number[MyEeprom.EepromTestWriteCount%1000/100];
 207   2            from[LED_RealHumidity_COM2]=Number[MyEeprom.EepromTestWriteCount%100/10];
 208   2      
 209   2            from[LED_FDTimeLeft_COM1]=Number[MyEeprom.EepromTestWriteCount%10];
 210   2            from[LED_FDTimeLeft_COM2]=ALL_SEG_OFF;
 211   2            from[LED_FDTimeLeft_COM3]=ALL_SEG_OFF;
 212   2      #endif
 213   2            break;
 214   2      
 215   2          default:
 216   2            break;
 217   2        }
 218   1      }
 219          
 220          #endif
 221          
 222          
 223          
 224          
 225          
 226          
 227          /*****************************************************************************
 228           Prototype    : MyEepromSaveAllDataUserHandle
 229           Description  : 用户接口,程序自动选择的当前区域中保存用户的所有的数据
 230                          注意:
 231                              1 此接口必须写入所有需要保存的数据
 232                              2 此接口处单个字节写调用EepromWriteByte()函数
 233           Input        : unsigned char writeOnWhichArea 当前保存数据的区域
 234           Output       : None
 235           Return Value :
 236           Calls        :
 237           Called By    :
 238          
C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 5   

 239            History        :
 240            1.Date         : 2021/7/6
 241              Author       : Dragon8814
 242              Modification : Created function
 243          
 244          ****************************************************************************/
 245          
 246          static void MyEepromSaveAllDataUserHandle ( unsigned char writeOnWhichArea )
 247          {
 248   1      
 249   1        /***************************用户自定义段没有需要不添加*************************/
 250   1        unsigned int xdata setTemp;
 251   1        unsigned char xdata setHumidity, fd_Time;
 252   1        //只有在DIY模式下需要备份
 253   1        //其他模式需要备份再写入,避免下次运行DIY模式时参数出错
 254   1        if ( SetData.FH_Mode != 9 )
 255   1        {
 256   2          setTemp = SetData.SetTemp; //备份当前运行
 257   2          setHumidity = SetData.SetHumidity;
 258   2          fd_Time = SetData.FD_Time;
 259   2          SetData.SetHumidity = SetData.SetHumidityBuf; //保存原始数据，
 260   2          SetData.SetTemp = SetData.SetTempBuf;
 261   2          SetData.FD_Time = SetData.FD_TimeBuf;
 262   2      
 263   2          RunData.WorkTimeBuf = RunData.WorkTime_Second;
 264   2        }
 265   1        else
 266   1        {
 267   2          //是DIY 需要更新本次数据，避免下次切换其他模式时还是保存旧的数据
 268   2          SetData.FD_TimeBuf = SetData.FD_Time;
 269   2          SetData.SetTempBuf = SetData.SetTemp;
 270   2          SetData.SetHumidityBuf = SetData.SetHumidity;
 271   2      
 272   2          RunData.WorkTimeBuf = RunData.WorkTime_Second;
 273   2        }
 274   1        /*********************************END********************************************/
 275   1      
 276   1      
 277   1      
 278   1      
 279   1      
 280   1      
 281   1        CLR_WDT;
 282   1        /*****************************用户必须添加段，必须加入所有需要保存的数据*************************/
 283   1        EepromWriteByte ( MyEeprom.EepromStrogeValue*2* writeOnWhichArea +FH_ModeAddr*2, SetData.FH_Mode );
 284   1        //写入设置温度
 285   1        EepromWriteByte ( MyEeprom.EepromStrogeValue*2* writeOnWhichArea +SetTempAddr_L*2,SetData.SetTemp );
 286   1        EepromWriteByte ( MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +SetTempAddr_H*2, SetData.SetTemp >> 8 
             -);
 287   1      
 288   1        EepromWriteByte ( MyEeprom.EepromStrogeValue* 2* writeOnWhichArea + SetHumidityAddr*2, SetData.SetHumidit
             -y );
 289   1        EepromWriteByte ( MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +FD_TimeAddr*2, SetData.FD_Time );
 290   1      
 291   1        CLR_WDT;
 292   1        EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +SystemStartFlagAddr*2, ( unsigned cha
             -r ) SystemStart_Flag );
 293   1        EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +WorkTimeAddr_L*2, RunData.WorkTime_Se
             -cond & 0x00ff );
 294   1        EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +WorkTimeAddr_H*2, RunData.WorkTime_Se
             -cond >> 8 );
 295   1        EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +FD_CountAdd_L*2, RunData.FD_Count & 0
C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 6   

             -x00ff );
 296   1        EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +FD_CountAdd_H*2, RunData.FD_Count >> 
             -8 );
 297   1      #if TestEeprom==TRUE //测试用
 298   1        {
 299   2          //测试时这几个地址更改为保存总写入次数 ,也可以自定义其他地址
 300   2          //MyEeprom.EepromTestWriteCount=162000;
 301   2          EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_L*2,  MyEeprom.EepromTe
             -stWriteCount & 0x000000ff );
 302   2          EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_H*2, ( MyEeprom.EepromT
             -estWriteCount>>8 ) & 0x000000ff );
 303   2          CLR_WDT;
 304   2          EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_L*2, ( MyEeprom.Eep
             -romTestWriteCount>>16 ) & 0x000000ff );
 305   2          EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_H*2, ( MyEeprom.Eep
             -romTestWriteCount>>24 ) );
 306   2        }
 307   1      #else
              
                EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_L*2, RunData.CS_Count & 
             -0x00ff );
                EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +CS_CountAddr_H*2, RunData.CS_Count >>
             - 8 );
                CLR_WDT;
                EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_L*2, RunData.DukBuf_
             -H & 0x00ff );
                EepromWriteByte (  MyEeprom.EepromStrogeValue* 2* writeOnWhichArea +SetStableDukAddr_H*2, RunData.DukBuf_
             -H >> 8 );
              #endif
 315   1        /*********************************END********************************************/
 316   1      
 317   1      
 318   1      
 319   1      
 320   1      
 321   1      
 322   1        /***************************用户自定义段没有需要不添加*************************/
 323   1        //用户自定义数据恢复
 324   1        if ( SetData.FH_Mode != 9 )
 325   1        {
 326   2          SetData.SetHumidity = setHumidity; //恢复
 327   2          SetData.SetTemp = setTemp;
 328   2          SetData.FD_Time = fd_Time;
 329   2        }
 330   1        /***************************用户自定义段没有需要不添加*************************/
 331   1      
 332   1      }
 333          
 334          
 335          
 336          
 337          
 338          
 339          
 340          
 341          
 342          
 343          /*****************************************************************************
 344           Prototype    : MyEepromRead
 345           Description  : 根据地址读取单个数据 用户调用
 346           Input        : unsigned char addr  
 347           Output       : None
C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 7   

 348           Return Value : unsigned
 349           Calls        : 
 350           Called By    : 
 351           
 352            History        :
 353            1.Date         : 2021/7/6
 354              Author       : Dragon8814
 355              Modification : Created function
 356          
 357          *****************************************************************************/
 358          unsigned char MyEepromRead(unsigned char addr)
 359          {
 360   1          MyEepromInit();
 361   1         return EepromRead ( addr );
 362   1      }
 363          
 364          
 365          /*****************************************************************************
 366           Prototype    : ReadSameDataFromEeprom
 367           Description  : 用户自定义，在Eeprom读取一些数据
 368           Input        : None
 369           Output       : None
 370           Return Value :
 371           Calls        :
 372           Called By    :
 373          
 374            History        :
 375            1.Date         : 2021/7/6
 376              Author       : Dragon8814
 377              Modification : Created function
 378          
 379          *****************************************************************************/
 380          
 381          void ReadSameDataFromEeprom()
 382          {
 383   1      #if TestEeprom==TRUE
 384   1        if ( MyEeprom.EepromTestWriteCount==0 ) //上电读取擦除次数
 385   1        {
 386   2          MyEepromTestHandle ( FALSE,'A' );
 387   2        }
 388   1      #endif
 389   1      
 390   1        SetData.FH_Mode=MyEepromRead ( FH_ModeAddr );
 391   1      
 392   1        SetData.FD_Time=MyEepromRead (  FD_TimeAddr );
 393   1      
 394   1        SetData.SetTemp=MyEepromRead (  SetTempAddr_L );
 395   1        SetData.SetTemp+= ( ( unsigned int ) MyEepromRead ( SetTempAddr_H ) <<8 );
 396   1        SetData.SetHumidity= MyEepromRead ( SetHumidityAddr );
 397   1        SetData.SetHumidityBuf=SetData.SetHumidity;
 398   1        SystemStart_Flag= ( bit ) MyEepromRead ( SystemStartFlagAddr );
 399   1        RunData.WorkTime_Second=MyEepromRead ( WorkTimeAddr_L )+ ( ( unsigned int ) MyEepromRead ( WorkTimeAddr_H
             - ) <<8 ) ;
 400   1        RunData.WorkTimeBuf=RunData.WorkTime_Second;
 401   1        RunData.FD_Count=MyEepromRead (  FD_CountAdd_L );
 402   1        RunData.FD_Count+= ( ( unsigned int ) MyEepromRead ( FD_CountAdd_H ) <<8 );
 403   1        RunData.CS_Count=MyEepromRead ( CS_CountAddr_L )+ ( ( unsigned int ) MyEepromRead ( CS_CountAddr_H ) <<8 
             -) ;
 404   1      
 405   1      
 406   1      }
 407          
C51 COMPILER V9.56.0.0   MYEEPROM                                                          10/10/2021 11:30:27 PAGE 8   

 408          
 409          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1411    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     23       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----       2
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
